{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kumar/KUMAR/REACT-NATIVE/TheShopApp/components/UI/Input.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar Input = function Input(props) {\n  var INPUT_CHANGE = \"INPUT_CHANGE\";\n  var INPUT_BLUR = \"INPUT_BLUR\";\n\n  var inputReducer = function inputReducer(state, action) {\n    switch (action.type) {\n      case INPUT_CHANGE:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          value: action.value,\n          isValid: action.isValid\n        });\n\n      case INPUT_BLUR:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          touched: true\n        });\n\n      default:\n        return state;\n    }\n  };\n\n  var onInputChange = props.onInputChange,\n      id = props.id;\n  useEffect(function () {\n    if (inputState.touched) {\n      onInputChange(id, inputState.value, inputState.isValid);\n    }\n  }, [inputState, onInputChange, id]);\n\n  var _useReducer = useReducer(inputReducer, {\n    value: props.initialValue ? props.initialValue : \"\",\n    isValid: props.initiallyValid,\n    touched: false\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      inputState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var textChangeHandler = function textChangeHandler(text) {\n    var emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    var isValid = true;\n\n    if (props.required && text.trim().length === 0) {\n      isValid = false;\n    }\n\n    if (props.email && !emailRegex.test(text.toLowerCase())) {\n      isValid = false;\n    }\n\n    if (props.min != null && +text < props.min) {\n      isValid = false;\n    }\n\n    if (props.max != null && +text > props.max) {\n      isValid = false;\n    }\n\n    if (props.minLength != null && text.length < props.minLength) {\n      isValid = false;\n    }\n\n    dispatch({\n      type: INPUT_CHANGE,\n      value: text,\n      isValid: isValid\n    });\n  };\n\n  var lostFocusHandler = function lostFocusHandler() {\n    dispatch({\n      type: INPUT_BLUR\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, props.label), React.createElement(TextInput, _extends({}, props, {\n    style: styles.input,\n    value: inputState.value,\n    onChangeText: textChangeHandler,\n    onBlur: lostFocusHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  })), !inputState.isValid && inputState.touched && React.createElement(View, {\n    style: styles.errorContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, props.errorText)));\n};\n\nvar styles = StyleSheet.create({\n  formControl: {\n    width: \"100%\"\n  },\n  label: {\n    fontFamily: \"title-bold\",\n    fontSize: 20,\n    marginVertical: 8\n  },\n  input: {\n    paddingHorizontal: 2,\n    paddingVertical: 5,\n    borderBottomColor: \"#ccc\",\n    borderBottomWidth: 1\n  },\n  errorContainer: {\n    marginVertical: 5\n  },\n  error: {\n    fontFamily: \"open-sans\",\n    fontSize: 13,\n    color: \"red\"\n  }\n});\nexport default Input;","map":{"version":3,"sources":["/home/kumar/KUMAR/REACT-NATIVE/TheShopApp/components/UI/Input.js"],"names":["React","useReducer","useEffect","Input","props","INPUT_CHANGE","INPUT_BLUR","inputReducer","state","action","type","value","isValid","touched","onInputChange","id","inputState","initialValue","initiallyValid","dispatch","textChangeHandler","text","emailRegex","required","trim","length","email","test","toLowerCase","min","max","minLength","lostFocusHandler","styles","formControl","label","input","errorContainer","error","errorText","StyleSheet","create","width","fontFamily","fontSize","marginVertical","paddingHorizontal","paddingVertical","borderBottomColor","borderBottomWidth","color"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\nimport { View, Text, TextInput, StyleSheet } from \"react-native\";\n\nconst Input = (props) => {\n  const INPUT_CHANGE = \"INPUT_CHANGE\";\n  const INPUT_BLUR = \"INPUT_BLUR\";\n\n  const inputReducer = (state, action) => {\n    switch (action.type) {\n      case INPUT_CHANGE:\n        return {\n          ...state,\n          value: action.value,\n          isValid: action.isValid,\n        };\n      case INPUT_BLUR:\n        return {\n          ...state,\n          touched: true,\n        };\n      default:\n        return state;\n    }\n  };\n\n  const { onInputChange, id } = props;\n\n  useEffect(() => {\n    if (inputState.touched) {\n      onInputChange(id, inputState.value, inputState.isValid);\n    }\n  }, [inputState, onInputChange, id]);\n\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue ? props.initialValue : \"\",\n    isValid: props.initiallyValid,\n    touched: false,\n  });\n\n  const textChangeHandler = (text) => {\n    const emailRegex =\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    let isValid = true;\n    if (props.required && text.trim().length === 0) {\n      isValid = false;\n    }\n    if (props.email && !emailRegex.test(text.toLowerCase())) {\n      isValid = false;\n    }\n    if (props.min != null && +text < props.min) {\n      isValid = false;\n    }\n    if (props.max != null && +text > props.max) {\n      isValid = false;\n    }\n    if (props.minLength != null && text.length < props.minLength) {\n      isValid = false;\n    }\n    dispatch({ type: INPUT_CHANGE, value: text, isValid });\n  };\n\n  const lostFocusHandler = () => {\n    dispatch({ type: INPUT_BLUR });\n  };\n\n  return (\n    <View style={styles.formControl}>\n      <Text style={styles.label}>{props.label}</Text>\n      <TextInput\n        {...props}\n        style={styles.input}\n        value={inputState.value}\n        onChangeText={textChangeHandler}\n        onBlur={lostFocusHandler}\n      />\n      {!inputState.isValid && inputState.touched && (\n        <View style={styles.errorContainer}>\n          <Text style={styles.error}>{props.errorText}</Text>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  formControl: {\n    width: \"100%\",\n  },\n  label: {\n    fontFamily: \"title-bold\",\n    fontSize: 20,\n    marginVertical: 8,\n  },\n  input: {\n    paddingHorizontal: 2,\n    paddingVertical: 5,\n    borderBottomColor: \"#ccc\",\n    borderBottomWidth: 1,\n  },\n  errorContainer: {\n    marginVertical: 5,\n  },\n  error: {\n    fontFamily: \"open-sans\",\n    fontSize: 13,\n    color: \"red\",\n  },\n});\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}