{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kumar/KUMAR/REACT-NATIVE/TheShopApp/screens/user/EditProductScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useCallback, useReducer } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport HeaderButton from \"../../components/UI/HeaderButton\";\nimport * as productsActions from \"../../store/action/products\";\nimport Input from \"../../components/UI/Input\";\nvar FORM_INPUT_UPDATE = \"FORM_INPUT_UPDATE\";\n\nvar formReducer = function formReducer(state, action) {\n  if (action.type === FORM_INPUT_UPDATE) {\n    var updatedValues = _objectSpread(_objectSpread({}, state.inputValues), {}, _defineProperty({}, action.input, action.value));\n\n    var updatedValidities = _objectSpread(_objectSpread({}, state.inputValidities), {}, _defineProperty({}, action.input, action.isValid));\n\n    var updatedFormIsValid = true;\n\n    for (var key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValidities: updatedValidities,\n      inputValues: updatedValues\n    };\n  }\n\n  return state;\n};\n\nvar EditProductScreen = function EditProductScreen(props) {\n  var prodId = props.navigation.getParam(\"productId\");\n  var editedProduct = useSelector(function (state) {\n    return state.products.userProducts.find(function (prod) {\n      return prod.id === prodId;\n    });\n  });\n  var dispatch = useDispatch();\n\n  var _useReducer = useReducer(formReducer, {\n    inputValues: {\n      title: editedProduct ? editedProduct.title : \"\",\n      imageUrl: editedProduct ? editedProduct.imageUrl : \"\",\n      description: editedProduct ? editedProduct.description : \"\",\n      price: \"\"\n    },\n    inputValidities: {\n      title: editedProduct ? true : false,\n      imageUrl: editedProduct ? true : false,\n      description: editedProduct ? true : false,\n      price: editedProduct ? true : false\n    },\n    formIsValid: editedProduct ? true : false\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      formState = _useReducer2[0],\n      dispatchFormState = _useReducer2[1];\n\n  var submitHandler = useCallback(function () {\n    if (!formState.formIsValid) {\n      Alert.alert(\"Wrong input!\", \"Please check the errors in the form.\", [{\n        text: \"Okay\"\n      }]);\n      return;\n    }\n\n    if (editedProduct) {\n      dispatch(productsActions.updateProduct(prodId, formState.inputValues.title, formState.inputValues.description, formState.inputValues.imageUrl));\n    } else {\n      dispatch(productsActions.createProduct(formState.inputValues.title, formState.inputValues.description, formState.inputValues.imageUrl, +formState.inputValues.price));\n    }\n\n    props.navigation.goBack();\n  }, [dispatch, prodId, formState]);\n  useEffect(function () {\n    props.navigation.setParams({\n      submit: submitHandler\n    });\n  }, [submitHandler]);\n  var inputChangeHandler = useCallback(function (inputIdentifier, inputValue, inputValidity) {\n    dispatchFormState({\n      type: FORM_INPUT_UPDATE,\n      value: inputValue,\n      isValid: inputValidity,\n      input: inputIdentifier\n    });\n  }, [dispatchFormState]);\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    id: \"title\",\n    label: \"Title\",\n    errorText: \"Please enter a valid title!\",\n    keyboardType: \"default\",\n    autoCapitalize: \"sentences\",\n    autoCorrect: true,\n    returnKeyType: \"next\",\n    onInputChange: inputChangeHandler,\n    initialValue: editedProduct ? editedProduct.title : \"\",\n    initiallyValid: !!editedProduct,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    id: \"imageUrl\",\n    label: \"Image Url\",\n    errorText: \"Please enter a valid image url!\",\n    keyboardType: \"default\",\n    returnKeyType: \"next\",\n    onInputChange: inputChangeHandler,\n    initialValue: editedProduct ? editedProduct.imageUrl : \"\",\n    initiallyValid: !!editedProduct,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }), editedProduct ? null : React.createElement(Input, {\n    id: \"price\",\n    label: \"Price\",\n    errorText: \"Please enter a valid price!\",\n    keyboardType: \"decimal-pad\",\n    returnKeyType: \"next\",\n    onInputChange: inputChangeHandler,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    id: \"description\",\n    label: \"Description\",\n    errorText: \"Please enter a valid description!\",\n    keyboardType: \"default\",\n    autoCapitalize: \"sentences\",\n    autoCorrect: true,\n    multiline: true,\n    numberOfLines: 3,\n    onInputChange: inputChangeHandler,\n    initialValue: editedProduct ? editedProduct.description : \"\",\n    initiallyValid: !!editedProduct,\n    required: true,\n    minLength: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  })));\n};\n\nEditProductScreen.navigationOptions = function (navData) {\n  var submitFn = navData.navigation.getParam(\"submit\");\n  return {\n    headerTitle: navData.navigation.getParam(\"productId\") ? \"Edit Product\" : \"Add Product\",\n    headerRight: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: HeaderButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }\n    }, React.createElement(Item, {\n      title: \"Save\",\n      iconName: Platform.OS === \"android\" ? \"md-checkmark\" : \"ios-checkmark\",\n      onPress: submitFn,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }))\n  };\n};\n\nvar styles = StyleSheet.create({\n  form: {\n    margin: 20\n  }\n});\nexport default EditProductScreen;","map":{"version":3,"sources":["/home/kumar/KUMAR/REACT-NATIVE/TheShopApp/screens/user/EditProductScreen.js"],"names":["React","useEffect","useCallback","useReducer","HeaderButtons","Item","useSelector","useDispatch","HeaderButton","productsActions","Input","FORM_INPUT_UPDATE","formReducer","state","action","type","updatedValues","inputValues","input","value","updatedValidities","inputValidities","isValid","updatedFormIsValid","key","formIsValid","EditProductScreen","props","prodId","navigation","getParam","editedProduct","products","userProducts","find","prod","id","dispatch","title","imageUrl","description","price","formState","dispatchFormState","submitHandler","Alert","alert","text","updateProduct","createProduct","goBack","setParams","submit","inputChangeHandler","inputIdentifier","inputValue","inputValidity","styles","form","navigationOptions","navData","submitFn","headerTitle","headerRight","Platform","OS","StyleSheet","create","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useReducer } from \"react\";\nimport {\n  View,\n  ScrollView,\n  StyleSheet,\n  Platform,\n  Alert,\n  KeyboardAvoidingView,\n} from \"react-native\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport HeaderButton from \"../../components/UI/HeaderButton\";\nimport * as productsActions from \"../../store/action/products\";\nimport Input from \"../../components/UI/Input\";\n\nconst FORM_INPUT_UPDATE = \"FORM_INPUT_UPDATE\";\n\nconst formReducer = (state, action) => {\n  if (action.type === FORM_INPUT_UPDATE) {\n    const updatedValues = {\n      ...state.inputValues,\n      [action.input]: action.value,\n    };\n    const updatedValidities = {\n      ...state.inputValidities,\n      [action.input]: action.isValid,\n    };\n    let updatedFormIsValid = true;\n    for (const key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValidities: updatedValidities,\n      inputValues: updatedValues,\n    };\n  }\n  return state;\n};\n\nconst EditProductScreen = (props) => {\n  const prodId = props.navigation.getParam(\"productId\");\n  const editedProduct = useSelector((state) =>\n    state.products.userProducts.find((prod) => prod.id === prodId)\n  );\n  const dispatch = useDispatch();\n\n  const [formState, dispatchFormState] = useReducer(formReducer, {\n    inputValues: {\n      title: editedProduct ? editedProduct.title : \"\",\n      imageUrl: editedProduct ? editedProduct.imageUrl : \"\",\n      description: editedProduct ? editedProduct.description : \"\",\n      price: \"\",\n    },\n    inputValidities: {\n      title: editedProduct ? true : false,\n      imageUrl: editedProduct ? true : false,\n      description: editedProduct ? true : false,\n      price: editedProduct ? true : false,\n    },\n    formIsValid: editedProduct ? true : false,\n  });\n\n  const submitHandler = useCallback(() => {\n    if (!formState.formIsValid) {\n      Alert.alert(\"Wrong input!\", \"Please check the errors in the form.\", [\n        { text: \"Okay\" },\n      ]);\n      return;\n    }\n    if (editedProduct) {\n      dispatch(\n        productsActions.updateProduct(\n          prodId,\n          formState.inputValues.title,\n          formState.inputValues.description,\n          formState.inputValues.imageUrl\n        )\n      );\n    } else {\n      dispatch(\n        productsActions.createProduct(\n          formState.inputValues.title,\n          formState.inputValues.description,\n          formState.inputValues.imageUrl,\n          +formState.inputValues.price\n        )\n      );\n    }\n    props.navigation.goBack();\n  }, [dispatch, prodId, formState]);\n\n  useEffect(() => {\n    props.navigation.setParams({ submit: submitHandler });\n  }, [submitHandler]);\n\n  const inputChangeHandler = useCallback(\n    (inputIdentifier, inputValue, inputValidity) => {\n      dispatchFormState({\n        type: FORM_INPUT_UPDATE,\n        value: inputValue,\n        isValid: inputValidity,\n        input: inputIdentifier,\n      });\n    },\n    [dispatchFormState]\n  );\n\n  return (\n    <ScrollView>\n      <View style={styles.form}>\n        <Input\n          id='title'\n          label='Title'\n          errorText='Please enter a valid title!'\n          keyboardType='default'\n          autoCapitalize='sentences'\n          autoCorrect\n          returnKeyType='next'\n          onInputChange={inputChangeHandler}\n          initialValue={editedProduct ? editedProduct.title : \"\"}\n          initiallyValid={!!editedProduct}\n          required\n        />\n        <Input\n          id='imageUrl'\n          label='Image Url'\n          errorText='Please enter a valid image url!'\n          keyboardType='default'\n          returnKeyType='next'\n          onInputChange={inputChangeHandler}\n          initialValue={editedProduct ? editedProduct.imageUrl : \"\"}\n          initiallyValid={!!editedProduct}\n          required\n        />\n        {editedProduct ? null : (\n          <Input\n            id='price'\n            label='Price'\n            errorText='Please enter a valid price!'\n            keyboardType='decimal-pad'\n            returnKeyType='next'\n            onInputChange={inputChangeHandler}\n            required\n          />\n        )}\n        <Input\n          id='description'\n          label='Description'\n          errorText='Please enter a valid description!'\n          keyboardType='default'\n          autoCapitalize='sentences'\n          autoCorrect\n          multiline\n          numberOfLines={3}\n          onInputChange={inputChangeHandler}\n          initialValue={editedProduct ? editedProduct.description : \"\"}\n          initiallyValid={!!editedProduct}\n          required\n          minLength={5}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nEditProductScreen.navigationOptions = (navData) => {\n  const submitFn = navData.navigation.getParam(\"submit\");\n  return {\n    headerTitle: navData.navigation.getParam(\"productId\")\n      ? \"Edit Product\"\n      : \"Add Product\",\n    headerRight: (\n      <HeaderButtons HeaderButtonComponent={HeaderButton}>\n        <Item\n          title='Save'\n          iconName={\n            Platform.OS === \"android\" ? \"md-checkmark\" : \"ios-checkmark\"\n          }\n          onPress={submitFn}\n        />\n      </HeaderButtons>\n    ),\n  };\n};\n\nconst styles = StyleSheet.create({\n  form: {\n    margin: 20,\n  },\n});\n\nexport default EditProductScreen;\n"]},"metadata":{},"sourceType":"module"}