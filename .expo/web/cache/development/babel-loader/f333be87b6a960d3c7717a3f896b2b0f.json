{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Order from \"../../models/order\";\nimport { ADD_ORDER } from \"../action/orders\";\nvar initialState = {\n  orders: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_ORDER:\n      var newOrder = new Order(new Date().toDateString(), action.orderData.items, action.orderData.amount, new Date());\n      return _objectSpread(_objectSpread({}, state), {}, {\n        orders: state.orders.concat(newOrder)\n      });\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/home/kumar/KUMAR/REACT-NATIVE/TheShopApp/store/reducers/orders.js"],"names":["Order","ADD_ORDER","initialState","orders","state","action","type","newOrder","Date","toDateString","orderData","items","amount","concat"],"mappings":";;;;;;AAAA,OAAOA,KAAP;AACA,SAASC,SAAT;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AADW,CAArB;AAGA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,SAAL;AACE,UAAMM,QAAQ,GAAG,IAAIP,KAAJ,CACf,IAAIQ,IAAJ,GAAWC,YAAX,EADe,EAEfJ,MAAM,CAACK,SAAP,CAAiBC,KAFF,EAGfN,MAAM,CAACK,SAAP,CAAiBE,MAHF,EAIf,IAAIJ,IAAJ,EAJe,CAAjB;AAMA,6CACKJ,KADL;AAEED,QAAAA,MAAM,EAAEC,KAAK,CAACD,MAAN,CAAaU,MAAb,CAAoBN,QAApB;AAFV;AARJ;;AAcA,SAAOH,KAAP;AACD,CAhBD","sourcesContent":["import Order from \"../../models/order\";\nimport { ADD_ORDER } from \"../action/orders\";\n\nconst initialState = {\n  orders: [],\n};\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_ORDER:\n      const newOrder = new Order(\n        new Date().toDateString(),\n        action.orderData.items,\n        action.orderData.amount,\n        new Date()\n      );\n      return {\n        ...state,\n        orders: state.orders.concat(newOrder),\n      };\n  }\n\n  return state;\n};\n"]},"metadata":{},"sourceType":"module"}