{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/kumar/KUMAR/REACT-NATIVE/TheShopApp/screens/shop/CartScreen.js\";\n\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CartItem from \"../../components/shop/CartItem\";\nimport Colors from \"../../constants/Colors\";\nimport { removeFromCart } from \"../../store/action/cart\";\nimport { addOrder } from \"../../store/action/orders\";\nimport Card from \"../../components/UI/Card\";\n\nvar CartScreen = function CartScreen(props) {\n  var cartTotalAmount = useSelector(function (state) {\n    return state.cart.totalAmount;\n  });\n  var cartItems = useSelector(function (state) {\n    var transformedCartItems = [];\n\n    for (var key in state.cart.items) {\n      transformedCartItems.push({\n        productId: key,\n        productTitle: state.cart.items[key].productTitle,\n        productPrice: state.cart.items[key].productPrice,\n        quantity: state.cart.items[key].quantity,\n        sum: state.cart.items[key].sum\n      });\n    }\n\n    return transformedCartItems.sort(function (a, b) {\n      return a.productId > b.productId ? 1 : -1;\n    });\n  });\n  var dispatch = useDispatch();\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(Card, {\n    style: styles.summary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.summaryText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \" \", \"Total :\", \" \", React.createElement(Text, {\n    style: styles.amount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \" \", \"$\", Math.round(cartTotalAmount.toFixed(2) * 100) / 100)), React.createElement(Button, {\n    color: Colors.accent,\n    title: \"Order Now\",\n    disabled: cartItems.length === 0,\n    onPress: function onPress() {\n      dispatch(addOrder(cartItems, cartTotalAmount));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), React.createElement(FlatList, {\n    data: cartItems,\n    keyExtractor: function keyExtractor(item) {\n      return item.productId;\n    },\n    renderItem: function renderItem(itemData) {\n      return React.createElement(CartItem, {\n        quantity: itemData.item.quantity,\n        title: itemData.item.productTitle,\n        amount: itemData.item.sum,\n        deletable: true,\n        onRemove: function onRemove() {\n          dispatch(removeFromCart(itemData.item.productId));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n};\n\nCartScreen.navigationOptions = {\n  headerTitle: \"Your Cart\"\n};\nvar styles = StyleSheet.create({\n  screen: {\n    margin: 20\n  },\n  summary: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 20,\n    padding: 10\n  },\n  summaryText: {\n    fontFamily: \"open-sans-bold\",\n    fontSize: 18\n  },\n  amount: {\n    fontFamily: \"open-sans\",\n    color: Colors.primary\n  }\n});\nexport default CartScreen;","map":{"version":3,"sources":["/home/kumar/KUMAR/REACT-NATIVE/TheShopApp/screens/shop/CartScreen.js"],"names":["React","useSelector","useDispatch","CartItem","Colors","removeFromCart","addOrder","Card","CartScreen","props","cartTotalAmount","state","cart","totalAmount","cartItems","transformedCartItems","key","items","push","productId","productTitle","productPrice","quantity","sum","sort","a","b","dispatch","styles","screen","summary","summaryText","amount","Math","round","toFixed","accent","length","item","itemData","navigationOptions","headerTitle","StyleSheet","create","margin","flexDirection","alignItems","justifyContent","marginBottom","padding","fontFamily","fontSize","color","primary"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Text, View, FlatList, Button, StyleSheet } from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CartItem from \"../../components/shop/CartItem\";\nimport Colors from \"../../constants/Colors\";\nimport { removeFromCart } from \"../../store/action/cart\";\nimport { addOrder } from \"../../store/action/orders\";\nimport Card from \"../../components/UI/Card\";\n\nconst CartScreen = (props) => {\n  const cartTotalAmount = useSelector((state) => state.cart.totalAmount);\n  const cartItems = useSelector((state) => {\n    const transformedCartItems = [];\n    for (const key in state.cart.items) {\n      transformedCartItems.push({\n        productId: key,\n        productTitle: state.cart.items[key].productTitle,\n        productPrice: state.cart.items[key].productPrice,\n        quantity: state.cart.items[key].quantity,\n        sum: state.cart.items[key].sum,\n      });\n    }\n    return transformedCartItems.sort((a, b) =>\n      a.productId > b.productId ? 1 : -1\n    );\n  });\n\n  const dispatch = useDispatch();\n\n  return (\n    <View style={styles.screen}>\n      <Card style={styles.summary}>\n        <Text style={styles.summaryText}>\n          {\" \"}\n          Total :{\" \"}\n          <Text style={styles.amount}>\n            {\" \"}\n            ${Math.round(cartTotalAmount.toFixed(2) * 100) / 100}\n          </Text>\n        </Text>\n        <Button\n          color={Colors.accent}\n          title='Order Now'\n          disabled={cartItems.length === 0}\n          onPress={() => {\n            dispatch(addOrder(cartItems, cartTotalAmount));\n          }}\n        />\n      </Card>\n      <FlatList\n        data={cartItems}\n        keyExtractor={(item) => item.productId}\n        renderItem={(itemData) => (\n          <CartItem\n            quantity={itemData.item.quantity}\n            title={itemData.item.productTitle}\n            amount={itemData.item.sum}\n            deletable\n            onRemove={() => {\n              dispatch(removeFromCart(itemData.item.productId));\n            }}\n          />\n        )}\n      />\n    </View>\n  );\n};\n\nCartScreen.navigationOptions = {\n  headerTitle: \"Your Cart\",\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    margin: 20,\n  },\n  summary: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginBottom: 20,\n    padding: 10,\n  },\n  summaryText: {\n    fontFamily: \"open-sans-bold\",\n    fontSize: 18,\n  },\n  amount: {\n    fontFamily: \"open-sans\",\n    color: Colors.primary,\n  },\n});\n\nexport default CartScreen;\n"]},"metadata":{},"sourceType":"module"}