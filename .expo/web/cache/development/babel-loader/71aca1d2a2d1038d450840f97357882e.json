{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/kumar/KUMAR/REACT-NATIVE/TheShopApp/screens/shop/ProductDetailScreen.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Colors from \"../../constants/Colors\";\nimport * as cartActions from \"../../store/action/cart\";\n\nvar ProductDetailScreen = function ProductDetailScreen(props) {\n  var productId = props.navigation.getParam(\"productId\");\n  var selectedProduct = useSelector(function (state) {\n    return state.products.availableProducts.find(function (prod) {\n      return prod.id === productId;\n    });\n  });\n  var dispatch = useDispatch();\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: selectedProduct.imageUrl\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.actions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    color: Colors.primary,\n    title: \"Add To Cart\",\n    onPress: function onPress() {\n      dispatch(cartActions.addToCart(selectedProduct));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    style: styles.price,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"$\", selectedProduct.price.toFixed(2)), React.createElement(Text, {\n    style: styles.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, selectedProduct.description));\n};\n\nProductDetailScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: navData.navigation.getParam(\"productTitle\")\n  };\n};\n\nvar styles = StyleSheet.create({\n  image: {\n    width: \"100%\",\n    height: 300\n  },\n  actions: {\n    marginVertical: 10,\n    alignItems: \"center\"\n  },\n  price: {\n    fontSize: 20,\n    color: \"#888\",\n    textAlign: \"center\",\n    marginVertical: 20,\n    fontFamily: \"open-sans\"\n  },\n  description: {\n    fontFamily: \"open-sans-bold\",\n    fontSize: 24,\n    textAlign: \"center\",\n    marginHorizontal: 20\n  }\n});\nexport default ProductDetailScreen;","map":{"version":3,"sources":["/home/kumar/KUMAR/REACT-NATIVE/TheShopApp/screens/shop/ProductDetailScreen.js"],"names":["React","useSelector","useDispatch","Colors","cartActions","ProductDetailScreen","props","productId","navigation","getParam","selectedProduct","state","products","availableProducts","find","prod","id","dispatch","styles","image","uri","imageUrl","actions","primary","addToCart","price","toFixed","description","navigationOptions","navData","headerTitle","StyleSheet","create","width","height","marginVertical","alignItems","fontSize","color","textAlign","fontFamily","marginHorizontal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAUA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP;AACA,OAAO,KAAKC,WAAZ;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAW;AACrC,MAAMC,SAAS,GAAGD,KAAK,CAACE,UAAN,CAAiBC,QAAjB,CAA0B,WAA1B,CAAlB;AACA,MAAMC,eAAe,GAAGT,WAAW,CAAC,UAACU,KAAD;AAAA,WAClCA,KAAK,CAACC,QAAN,CAAeC,iBAAf,CAAiCC,IAAjC,CAAsC,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,EAAL,KAAYT,SAAtB;AAAA,KAAtC,CADkC;AAAA,GAAD,CAAnC;AAIA,MAAMU,QAAQ,GAAGf,WAAW,EAA5B;AAEA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEgB,MAAM,CAACC,KAArB;AAA4B,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAEV,eAAe,CAACW;AAAvB,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEnB,MAAM,CAACoB,OADhB;AAEE,IAAA,KAAK,EAAC,aAFR;AAGE,IAAA,OAAO,EAAE,mBAAM;AACbN,MAAAA,QAAQ,CAACb,WAAW,CAACoB,SAAZ,CAAsBd,eAAtB,CAAD,CAAR;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAWE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACO,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6Bf,eAAe,CAACe,KAAhB,CAAsBC,OAAtB,CAA8B,CAA9B,CAA7B,CAXF,EAYE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCjB,eAAe,CAACiB,WAAlD,CAZF,CADF;AAgBD,CAxBD;;AA0BAtB,mBAAmB,CAACuB,iBAApB,GAAwC,UAACC,OAAD,EAAa;AACnD,SAAO;AACLC,IAAAA,WAAW,EAAED,OAAO,CAACrB,UAAR,CAAmBC,QAAnB,CAA4B,cAA5B;AADR,GAAP;AAGD,CAJD;;AAMA,IAAMS,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/Bb,EAAAA,KAAK,EAAE;AACLc,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,MAAM,EAAE;AAFH,GADwB;AAK/BZ,EAAAA,OAAO,EAAE;AACPa,IAAAA,cAAc,EAAE,EADT;AAEPC,IAAAA,UAAU,EAAE;AAFL,GALsB;AAS/BX,EAAAA,KAAK,EAAE;AACLY,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,KAAK,EAAE,MAFF;AAGLC,IAAAA,SAAS,EAAE,QAHN;AAILJ,IAAAA,cAAc,EAAE,EAJX;AAKLK,IAAAA,UAAU,EAAE;AALP,GATwB;AAgB/Bb,EAAAA,WAAW,EAAE;AACXa,IAAAA,UAAU,EAAE,gBADD;AAEXH,IAAAA,QAAQ,EAAE,EAFC;AAGXE,IAAAA,SAAS,EAAE,QAHA;AAIXE,IAAAA,gBAAgB,EAAE;AAJP;AAhBkB,CAAlB,CAAf;AAwBA,eAAepC,mBAAf","sourcesContent":["import React from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  Button,\n  ScrollView,\n} from \"react-native\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Colors from \"../../constants/Colors\";\nimport * as cartActions from \"../../store/action/cart\";\n\nconst ProductDetailScreen = (props) => {\n  const productId = props.navigation.getParam(\"productId\");\n  const selectedProduct = useSelector((state) =>\n    state.products.availableProducts.find((prod) => prod.id === productId)\n  );\n\n  const dispatch = useDispatch();\n\n  return (\n    <ScrollView>\n      <Image style={styles.image} source={{ uri: selectedProduct.imageUrl }} />\n      <View style={styles.actions}>\n        <Button\n          color={Colors.primary}\n          title='Add To Cart'\n          onPress={() => {\n            dispatch(cartActions.addToCart(selectedProduct));\n          }}\n        />\n      </View>\n      <Text style={styles.price}>${selectedProduct.price.toFixed(2)}</Text>\n      <Text style={styles.description}>{selectedProduct.description}</Text>\n    </ScrollView>\n  );\n};\n\nProductDetailScreen.navigationOptions = (navData) => {\n  return {\n    headerTitle: navData.navigation.getParam(\"productTitle\"),\n  };\n};\n\nconst styles = StyleSheet.create({\n  image: {\n    width: \"100%\",\n    height: 300,\n  },\n  actions: {\n    marginVertical: 10,\n    alignItems: \"center\",\n  },\n  price: {\n    fontSize: 20,\n    color: \"#888\",\n    textAlign: \"center\",\n    marginVertical: 20,\n    fontFamily: \"open-sans\",\n  },\n  description: {\n    fontFamily: \"open-sans-bold\",\n    fontSize: 24,\n    textAlign: \"center\",\n    marginHorizontal: 20,\n  },\n});\n\nexport default ProductDetailScreen;\n"]},"metadata":{},"sourceType":"module"}